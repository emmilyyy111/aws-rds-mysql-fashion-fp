{"version":3,"sources":["../src/users.js"],"names":["mysql","require","uuid","dbconfig","db","createConnection","connect","exports","getAllUsers","req","res","query","err","rows","console","log","status","send","end","createNewUser","newUser","deleteUser","fname","lname","updateUserAge","body","newAge","name","updateU"],"mappings":"AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd,C,CAA+B;AAC/B,MAAM,EAAEC,IAAF,KAAWD,QAAQ,QAAR,CAAjB;AACA,MAAM,EAAEE,QAAF,KAAeF,QAAQ,aAAR,CAArB,C,CAA4C;AAC5C,MAAMG,KAAKJ,MAAMK,gBAAN,CAAuBF,QAAvB,CAAX,C,CAA4C;AAC5CC,GAAGE,OAAH,G,CAAa;;AAEbC,QAAQC,WAAR,GAAsB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClC;AACA,QAAMN,KAAKJ,MAAMK,gBAAN,CAAuBF,QAAvB,CAAX;AACEC,KAAGE,OAAH;AACIF,KAAGO,KAAH,CAAU,4BAAV,EAAuC,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClD,QAAID,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACAF,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,GAArB;AACA;AACD;AACDF,QAAIO,IAAJ,CAASJ,IAAT;AACD,GAPH;AAQET,KAAGc,GAAH;AACT,CAbD;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAX,QAAQY,aAAR,GAAwB,CAACV,GAAD,EAAMC,GAAN,KAAc;AACpC,QAAMN,KAAKJ,MAAMK,gBAAN,CAAuBF,QAAvB,CAAX;AACEC,KAAGE,OAAH;AACA,QAAMc,UAAW,4DAA2DlB,IAAK,4BAAjF;AACEE,KAAGO,KAAH,CAASS,OAAT,EAAkB,CAACR,GAAD,EAAMC,IAAN,KAAe;AAC3B,QAAID,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACAF,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,GAArB;AACA;AACD;AACDF,QAAIO,IAAJ,CAASJ,IAAT;AACD,GAPL;AAQGT,KAAGc,GAAH;AACR,CAbD;;AAeAX,QAAQc,UAAR,GAAqB,CAAC,EAAEV,OAAO,EAAEW,KAAF,EAASC,KAAT,EAAT,EAAD,EAA8Bb,GAA9B,KAAsC;AACzD,QAAMN,KAAKJ,MAAMK,gBAAN,CAAuBF,QAAvB,CAAX;AACEC,KAAGE,OAAH;AACA,QAAMe,aAAc,2CAA0CC,KAAM,kBAAiBC,KAAM,GAA3F;AACEnB,KAAGO,KAAH,CAASU,UAAT,EAAqB,CAACT,GAAD,EAAMC,IAAN,KAAe;AAC9B,QAAID,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACAF,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,GAArB;AACA;AACD;AACDF,QAAIO,IAAJ,CAASJ,IAAT;AACD,GAPL;AAQIT,KAAGc,GAAH;AACT,CAbD;;AAeAX,QAAQiB,aAAR,GAAwB,CAAC,EAAEC,MAAM,EAAEC,MAAF,EAAUJ,KAAV,EAAiBC,KAAjB,EAAR,EAAD,EAAqCb,GAArC,KAA6C;AAAE;AACrE,QAAMN,KAAKJ,MAAMK,gBAAN,CAAuBF,QAAvB,CAAX;AACA,QAAMwB,OAAQL,SAASC,KAAvB;AACEnB,KAAGE,OAAH;AACA,QAAMsB,UAAW,iCAAgCF,MAAO,mBAAkBJ,KAAM,kBAAiBC,KAAM,GAAvG;AACEnB,KAAGO,KAAH,CAASiB,OAAT,EAAkB,CAAChB,GAAD,EAAMC,IAAN,KAAe;AAC3B,QAAID,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACAF,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,GAArB;AACA;AACD;AACDF,QAAIO,IAAJ,CAASJ,IAAT;AACD,GAPL;AAQIT,KAAGc,GAAH;AACT,CAdD","file":"users.js","sourcesContent":["const mysql = require('mysql') // importing mysql library we added from npm\nconst { uuid } = require('uuidv4');\nconst { dbconfig } = require('../dbconfig') // uses our secrets\nconst db = mysql.createConnection(dbconfig) // makes connection\ndb.connect() // opens connection\n\nexports.getAllUsers = (req, res) => {\n  // function so i personally can see my users\n  const db = mysql.createConnection(dbconfig)\n    db.connect()\n        db.query(`SELECT * FROM user_profile`, (err, rows) => {\n            if (err) {\n              console.log(err)\n              res.status(500).send(err)\n              return\n            }\n            res.send(rows)\n          })\n          db.end()\n}\n\n// exports.getSingleUser = (req, res) => {\n//   const db = mysql.createConnection(dbconfig);\n//   db.connect();\n//   db.query(`SELECT * FROM user_profile WHERE `, (err, rows) => {\n//     if (err) {\n//       console.log(err);\n//       res.status(500).send(err);\n//       return;\n//     };\n//     res.send(rows);\n//   });\n//   db.end();\n// }\n\nexports.createNewUser = (req, res) => {\n  const db = mysql.createConnection(dbconfig)\n    db.connect()\n    const newUser = `INSERT INTO user_profile (id, fname, lname, age) VALUES (${uuid}, 'fname', 'lname', 'age')`;\n      db.query(newUser, (err, rows) => {\n            if (err) {\n              console.log(err)\n              res.status(500).send(err)\n              return\n            }\n            res.send(rows)\n          })\n         db.end()\n}\n\nexports.deleteUser = ({ query: { fname, lname } }, res) => {\n  const db = mysql.createConnection(dbconfig)\n    db.connect()\n    const deleteUser = `DELETE FROM user_profile WHERE fname = \"${fname}\" AND lname = \"${lname}\"`;\n      db.query(deleteUser, (err, rows) => {\n            if (err) {\n              console.log(err)\n              res.status(500).send(err)\n              return\n            }\n            res.send(rows)\n          })\n          db.end()\n}\n\nexports.updateUserAge = ({ body: { newAge, fname, lname } }, res) => { // object destructuring (req.body.oldFName)\n  const db = mysql.createConnection(dbconfig) \n  const name = (fname && lname)\n    db.connect()\n    const updateU = `UPDATE user_profile SET age = ${newAge} WHERE fname = \"${fname}\" AND lname = \"${lname}\"`;\n      db.query(updateU, (err, rows) => {\n            if (err) {\n              console.log(err)\n              res.status(500).send(err)\n              return\n            }\n            res.send(rows)\n          })\n          db.end()\n}"]}